<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.9.7 on darwin)" generated="20230501 16:44:47.449" rpa="false" schemaversion="2">
<suite id="s1" name="CloudGrid" source="/Users/applemacbook_pro/Desktop/Junk/pabot/parallel-testing-with-robot-framework/Tests/CloudGrid">
<suite id="s1-s1" name="Test Sel Playground" source="/Users/applemacbook_pro/Desktop/Junk/pabot/parallel-testing-with-robot-framework/Tests/CloudGrid/test_sel_playground.robot">
<test id="s1-s1-t1" name="Example 2: [Playground] Parallel Testing with Robot framework">
<kw name="Open test browser" library="Common">
<arg>${site_url}</arg>
<arg>${BROWSER}</arg>
<arg>${CAPABILITIES}</arg>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${TEST_URL}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=${REMOTE_URL}</arg>
<arg>desired_capabilities=${CAPABILITIES}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230501 16:44:07.549" level="INFO">Opening browser 'Firefox' to base url 'https://www.lambdatest.com/selenium-playground/' through remote server at 'http://himanshujlambdatest:Ia1MiqNfciCXfnPI8oWs6PL7u0bZ2NRqXd1nkB3HpzICma13D6@hub.lambdatest.com/wd/hub'.</msg>
<status status="PASS" starttime="20230501 16:44:07.548" endtime="20230501 16:44:16.979"/>
</kw>
<timeout value="50 minutes"/>
<status status="PASS" starttime="20230501 16:44:07.547" endtime="20230501 16:44:16.980"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230501 16:44:16.981" endtime="20230501 16:44:17.688"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230501 16:44:20.692" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20230501 16:44:17.689" endtime="20230501 16:44:20.692"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>xpath://a[.='Input Form Submit']</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20230501 16:44:21.092" level="INFO">Current page contains element 'xpath://a[.='Input Form Submit']'.</msg>
<status status="PASS" starttime="20230501 16:44:20.693" endtime="20230501 16:44:21.092"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SubmitButton}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:21.095" level="INFO">Clicking link 'xpath=//a[.='Input Form Submit']'.</msg>
<status status="PASS" starttime="20230501 16:44:21.093" endtime="20230501 16:44:22.412"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${Name}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20230501 16:44:22.650" level="INFO">Current page contains element 'name:name'.</msg>
<status status="PASS" starttime="20230501 16:44:22.413" endtime="20230501 16:44:22.650"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${Name}</arg>
<arg>TestName</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:22.653" level="INFO">Typing text 'TestName' into text field 'name:name'.</msg>
<status status="PASS" starttime="20230501 16:44:22.651" endtime="20230501 16:44:23.522"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230501 16:44:28.525" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20230501 16:44:23.522" endtime="20230501 16:44:28.526"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${email}</arg>
<arg>testing@gmail.com</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:28.529" level="INFO">Typing text 'testing@gmail.com' into text field 'id:inputEmail4'.</msg>
<status status="PASS" starttime="20230501 16:44:28.526" endtime="20230501 16:44:29.223"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${passwd}</arg>
<arg>Password1</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:29.226" level="INFO">Typing text 'Password1' into text field '//input[@name='password']'.</msg>
<status status="PASS" starttime="20230501 16:44:29.224" endtime="20230501 16:44:29.948"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${company}</arg>
<arg>LambdaTest</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:29.950" level="INFO">Typing text 'LambdaTest' into text field '//input[@id='company']'.</msg>
<status status="PASS" starttime="20230501 16:44:29.949" endtime="20230501 16:44:30.712"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${website}</arg>
<arg>https://wwww.lambdatest.com</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:30.714" level="INFO">Typing text 'https://wwww.lambdatest.com' into text field 'css=#websitename'.</msg>
<status status="PASS" starttime="20230501 16:44:30.712" endtime="20230501 16:44:31.425"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${country}</arg>
<arg>US</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20230501 16:44:31.426" level="INFO">Selecting options from selection list 'name:country' by value US.</msg>
<status status="PASS" starttime="20230501 16:44:31.425" endtime="20230501 16:44:33.996"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${city}</arg>
<arg>San Jose</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:33.997" level="INFO">Typing text 'San Jose' into text field '//input[@id='inputCity']'.</msg>
<status status="PASS" starttime="20230501 16:44:33.996" endtime="20230501 16:44:34.703"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${address1}</arg>
<arg>Googleplex, 1600 Amphitheatre Pkwy</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:34.705" level="INFO">Typing text 'Googleplex, 1600 Amphitheatre Pkwy' into text field 'css=#inputZip'.</msg>
<status status="PASS" starttime="20230501 16:44:34.704" endtime="20230501 16:44:35.425"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${address2}</arg>
<arg>Mountain View, CA 94043</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:35.428" level="INFO">Typing text 'Mountain View, CA 94043' into text field 'id:inputAddress2'.</msg>
<status status="PASS" starttime="20230501 16:44:35.426" endtime="20230501 16:44:36.241"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${state}</arg>
<arg>California</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:36.243" level="INFO">Typing text 'California' into text field 'css=#inputState'.</msg>
<status status="PASS" starttime="20230501 16:44:36.241" endtime="20230501 16:44:37.127"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${city}</arg>
<arg>San Jose</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:37.130" level="INFO">Typing text 'San Jose' into text field '//input[@id='inputCity']'.</msg>
<status status="PASS" starttime="20230501 16:44:37.128" endtime="20230501 16:44:37.825"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${address1}</arg>
<arg>94088</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:37.828" level="INFO">Typing text '94088' into text field 'css=#inputZip'.</msg>
<status status="PASS" starttime="20230501 16:44:37.826" endtime="20230501 16:44:38.524"/>
</kw>
<kw name="Close test browser" library="Common" type="TEARDOWN">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${REMOTE_URL}' != ''</arg>
<arg>report lambdatest status</arg>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Report Lambdatest Status" library="LambdaTestStatus">
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<msg timestamp="20230501 16:44:38.529" level="INFO">Executing JavaScript:
lambda-status=passed
Without any arguments.</msg>
<msg timestamp="20230501 16:44:39.773" level="INFO">Executing JavaScript:
lambda-name=Example 2: [Playground] Parallel Testing with Robot framework
Without any arguments.</msg>
<status status="PASS" starttime="20230501 16:44:38.527" endtime="20230501 16:44:41.018"/>
</kw>
<status status="PASS" starttime="20230501 16:44:38.526" endtime="20230501 16:44:41.018"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230501 16:44:41.018" endtime="20230501 16:44:41.996"/>
</kw>
<status status="PASS" starttime="20230501 16:44:38.525" endtime="20230501 16:44:41.996"/>
</kw>
<tag>Selenium Playground Automation</tag>
<timeout value="50 minutes"/>
<status status="PASS" starttime="20230501 16:44:07.546" endtime="20230501 16:44:41.996"/>
</test>
<status status="PASS" starttime="20230501 16:44:07.402" endtime="20230501 16:44:41.997"/>
</suite>
<suite id="s1-s2" name="Test Todo App" source="/Users/applemacbook_pro/Desktop/Junk/pabot/parallel-testing-with-robot-framework/Tests/CloudGrid/test_todo_app.robot">
<test id="s1-s2-t1" name="Example 1: [ToDo] Parallel Testing with Robot framework">
<kw name="Open test browser" library="Common">
<arg>${site_url}</arg>
<arg>${BROWSER_1}</arg>
<arg>${CAPABILITIES_1}</arg>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${TEST_URL}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=${REMOTE_URL}</arg>
<arg>desired_capabilities=${CAPABILITIES}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230501 16:44:07.549" level="INFO">Opening browser 'Chrome' to base url 'https://lambdatest.github.io/sample-todo-app/' through remote server at 'http://himanshujlambdatest:Ia1MiqNfciCXfnPI8oWs6PL7u0bZ2NRqXd1nkB3HpzICma13D6@hub.lambdatest.com/wd/hub'.</msg>
<status status="PASS" starttime="20230501 16:44:07.548" endtime="20230501 16:44:17.364"/>
</kw>
<timeout value="50 minutes"/>
<status status="PASS" starttime="20230501 16:44:07.547" endtime="20230501 16:44:17.365"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230501 16:44:17.366" endtime="20230501 16:44:17.896"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230501 16:44:20.899" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20230501 16:44:17.897" endtime="20230501 16:44:20.899"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${FirstItem}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20230501 16:44:21.147" level="INFO">Current page contains element 'name:li1'.</msg>
<status status="PASS" starttime="20230501 16:44:20.900" endtime="20230501 16:44:21.147"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${SecondItem}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20230501 16:44:21.416" level="INFO">Current page contains element 'name:li2'.</msg>
<status status="PASS" starttime="20230501 16:44:21.148" endtime="20230501 16:44:21.416"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${FirstItem}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:21.419" level="INFO">Clicking button 'name:li1'.</msg>
<status status="PASS" starttime="20230501 16:44:21.417" endtime="20230501 16:44:22.262"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${SecondItem}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:22.264" level="INFO">Clicking button 'name:li2'.</msg>
<status status="PASS" starttime="20230501 16:44:22.263" endtime="20230501 16:44:23.672"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${ToDoText}</arg>
<arg>${NewItemText}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:23.675" level="INFO">Typing text 'Yey Let's add it to list' into text field 'id:sampletodotext'.</msg>
<status status="PASS" starttime="20230501 16:44:23.673" endtime="20230501 16:44:24.882"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${AddButton}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:24.885" level="INFO">Clicking button 'id:addbutton'.</msg>
<status status="PASS" starttime="20230501 16:44:24.883" endtime="20230501 16:44:25.983"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NewAdditionText}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:26.687" level="INFO">${response} = Yey Let's add it to list</msg>
<status status="PASS" starttime="20230501 16:44:25.984" endtime="20230501 16:44:26.687"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response}</arg>
<arg>${NewItemText}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230501 16:44:26.688" endtime="20230501 16:44:26.689"/>
</kw>
<kw name="Close test browser" library="Common" type="TEARDOWN">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${REMOTE_URL}' != ''</arg>
<arg>report lambdatest status</arg>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Report Lambdatest Status" library="LambdaTestStatus">
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<msg timestamp="20230501 16:44:26.693" level="INFO">Executing JavaScript:
lambda-status=passed
Without any arguments.</msg>
<msg timestamp="20230501 16:44:28.052" level="INFO">Executing JavaScript:
lambda-name=Example 1: [ToDo] Parallel Testing with Robot framework
Without any arguments.</msg>
<status status="PASS" starttime="20230501 16:44:26.691" endtime="20230501 16:44:29.292"/>
</kw>
<status status="PASS" starttime="20230501 16:44:26.690" endtime="20230501 16:44:29.293"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230501 16:44:29.294" endtime="20230501 16:44:29.813"/>
</kw>
<status status="PASS" starttime="20230501 16:44:26.689" endtime="20230501 16:44:29.814"/>
</kw>
<tag>ToDo App Automation - 1</tag>
<timeout value="50 minutes"/>
<status status="PASS" starttime="20230501 16:44:07.547" endtime="20230501 16:44:29.815"/>
</test>
<test id="s1-s2-t2" name="Example 2: [ToDo] Parallel Testing with Robot framework">
<kw name="Open test browser" library="Common">
<arg>${site_url}</arg>
<arg>${BROWSER_2}</arg>
<arg>${CAPABILITIES_2}</arg>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${TEST_URL}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=${REMOTE_URL}</arg>
<arg>desired_capabilities=${CAPABILITIES}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230501 16:44:29.821" level="INFO">Opening browser 'Safari' to base url 'https://lambdatest.github.io/sample-todo-app/' through remote server at 'http://himanshujlambdatest:Ia1MiqNfciCXfnPI8oWs6PL7u0bZ2NRqXd1nkB3HpzICma13D6@hub.lambdatest.com/wd/hub'.</msg>
<status status="PASS" starttime="20230501 16:44:29.819" endtime="20230501 16:44:35.833"/>
</kw>
<timeout value="50 minutes"/>
<status status="PASS" starttime="20230501 16:44:29.817" endtime="20230501 16:44:35.833"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230501 16:44:35.834" endtime="20230501 16:44:36.212"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230501 16:44:39.216" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20230501 16:44:36.213" endtime="20230501 16:44:39.217"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${FirstItem}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20230501 16:44:39.455" level="INFO">Current page contains element 'name:li1'.</msg>
<status status="PASS" starttime="20230501 16:44:39.217" endtime="20230501 16:44:39.455"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${SecondItem}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20230501 16:44:39.694" level="INFO">Current page contains element 'name:li2'.</msg>
<status status="PASS" starttime="20230501 16:44:39.456" endtime="20230501 16:44:39.694"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${FifthItem}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20230501 16:44:39.932" level="INFO">Current page contains element 'name:li5'.</msg>
<status status="PASS" starttime="20230501 16:44:39.695" endtime="20230501 16:44:39.932"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${FirstItem}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:39.933" level="INFO">Clicking button 'name:li1'.</msg>
<status status="PASS" starttime="20230501 16:44:39.932" endtime="20230501 16:44:40.590"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${SecondItem}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:40.591" level="INFO">Clicking button 'name:li2'.</msg>
<status status="PASS" starttime="20230501 16:44:40.591" endtime="20230501 16:44:41.253"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${FifthItem}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:41.255" level="INFO">Clicking button 'name:li5'.</msg>
<status status="PASS" starttime="20230501 16:44:41.253" endtime="20230501 16:44:41.929"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${ToDoText}</arg>
<arg>${NewItemText}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:41.930" level="INFO">Typing text 'Yey Let's add it to list' into text field 'id:sampletodotext'.</msg>
<status status="PASS" starttime="20230501 16:44:41.929" endtime="20230501 16:44:42.879"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${AddButton}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:42.880" level="INFO">Clicking button 'id:addbutton'.</msg>
<status status="PASS" starttime="20230501 16:44:42.879" endtime="20230501 16:44:43.601"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NewAdditionText}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230501 16:44:44.052" level="INFO">${response} = Yey Let's add it to list</msg>
<status status="PASS" starttime="20230501 16:44:43.601" endtime="20230501 16:44:44.052"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response}</arg>
<arg>${NewItemText}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230501 16:44:44.052" endtime="20230501 16:44:44.053"/>
</kw>
<kw name="Close test browser" library="Common" type="TEARDOWN">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${REMOTE_URL}' != ''</arg>
<arg>report lambdatest status</arg>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Report Lambdatest Status" library="LambdaTestStatus">
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<msg timestamp="20230501 16:44:44.055" level="INFO">Executing JavaScript:
lambda-status=passed
Without any arguments.</msg>
<msg timestamp="20230501 16:44:45.336" level="INFO">Executing JavaScript:
lambda-name=Example 2: [ToDo] Parallel Testing with Robot framework
Without any arguments.</msg>
<status status="PASS" starttime="20230501 16:44:44.054" endtime="20230501 16:44:46.667"/>
</kw>
<status status="PASS" starttime="20230501 16:44:44.054" endtime="20230501 16:44:46.668"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230501 16:44:46.668" endtime="20230501 16:44:47.181"/>
</kw>
<status status="PASS" starttime="20230501 16:44:44.053" endtime="20230501 16:44:47.182"/>
</kw>
<tag>ToDo App Automation - 2</tag>
<timeout value="50 minutes"/>
<status status="PASS" starttime="20230501 16:44:29.816" endtime="20230501 16:44:47.182"/>
</test>
<status status="PASS" starttime="20230501 16:44:07.402" endtime="20230501 16:44:47.184"/>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 2 executions.</doc>
<status status="PASS" starttime="20230501 16:44:07.387" endtime="20230501 16:44:47.187"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Selenium Playground Automation</stat>
<stat pass="1" fail="0" skip="0">ToDo App Automation - 1</stat>
<stat pass="1" fail="0" skip="0">ToDo App Automation - 2</stat>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="CloudGrid">CloudGrid</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Test Sel Playground">CloudGrid.Test Sel Playground</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Test Todo App">CloudGrid.Test Todo App</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
